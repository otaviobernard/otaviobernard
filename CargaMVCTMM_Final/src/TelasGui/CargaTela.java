/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TelasGui;

import Model.Carga;
import View.IViewSimplesCRUD;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import Control.TipoControl;
import Control.EncarregadoControl;
import Control.IControleSimples;
import Control.CargaControl;
import DAO.EncarregadoDAO;
import Model.Tipo;
import Model.Encarregado;
import ComboBoxModel.TipoCellRenderer;
import ComboBoxModel.TipoComboModel;
import ComboBoxModel.EncarregadoCellRenderer;
import ComboBoxModel.EncarregadoComboModel;
import ModeTable.EncarregadoTableModel;

/**
 *
 * @author otávio
 */
public class CargaTela extends ViewGuiSimples implements IViewSimplesCRUD<Carga>{

    private static final CargaControl controller = null;
    private static final CargaTela tela = null;
    private boolean retornoOk;
    private boolean retornoFornecedor;
    private final EncarregadoDAO fornecedorDao = new EncarregadoDAO();
    private final EncarregadoControl fornecedorController = new EncarregadoControl();
    private final EncarregadoTableModel fornecedorModel;
    private final TipoControl categoriaController = new TipoControl();
    private final TipoComboModel model = new TipoComboModel();
    private final EncarregadoComboModel modelFornecedorCombo = new EncarregadoComboModel();
    private IControleSimples controleSimples;
    

    private List<Tipo> listaCategorias;
    private List<Encarregado> listaFornecedores;

  
    public void setListaCategoria(List<Tipo> listaCategorias) {
        this.listaCategorias = listaCategorias;      
    }
    
    public void setListaFornecedor(List<Encarregado> listaFornecedores) {
        this.listaFornecedores = listaFornecedores;
    }
    
    
    
    public boolean isRetornoOk(){
        return retornoOk;
    }
    public boolean isRetornoFornecedor(){
        return retornoFornecedor;
    }
    
  
    public CargaTela(java.awt.Frame parent, boolean modal, EncarregadoTableModel fornecedorModel) {
        super(parent, modal);
        this.fornecedorModel = fornecedorModel;

        initComponents();
        this.cbxCategoria.setRenderer(new TipoCellRenderer());
        this.cbxFornecedor.setRenderer(new EncarregadoCellRenderer());
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        lblTitulo = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblMarca = new javax.swing.JLabel();
        txtMarca = new javax.swing.JTextField();
        lblCategoria = new javax.swing.JLabel();
        cbxCategoria = new javax.swing.JComboBox<>();
        lblQuantidade = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        txtPrecoVenda = new javax.swing.JFormattedTextField();
        lblPrecoVenda = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mmFornGrid = new javax.swing.JTable();
        btnAddFornecedor = new javax.swing.JButton();
        btnRomoverFornecedor = new javax.swing.JButton();
        lblFornecedor = new javax.swing.JLabel();
        cbxFornecedor = new javax.swing.JComboBox<>();

        jToggleButton1.setText("jToggleButton1");

        jToggleButton3.setText("jToggleButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblTitulo.setFont(new java.awt.Font("Nimbus Mono L", 1, 18)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Carga");
        lblTitulo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblNome.setText("Empresa Beneficiada:");

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        lblMarca.setText("Marca:");

        lblCategoria.setText("Tipo:");

        cbxCategoria.setModel(this.model);
        cbxCategoria.setSelectedItem(this.model);
        cbxCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCategoriaActionPerformed(evt);
            }
        });

        lblQuantidade.setText("Peso:");

        txtPrecoVenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.##"))));

        lblPrecoVenda.setText("Preço Carga:");

        btnCancelar.setBackground(new java.awt.Color(255, 0, 0));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnOk.setBackground(new java.awt.Color(102, 255, 51));
        btnOk.setText("Cadastrar");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        mmFornGrid.setModel(this.fornecedorModel);
        jScrollPane1.setViewportView(mmFornGrid);

        btnAddFornecedor.setBackground(new java.awt.Color(102, 255, 51));
        btnAddFornecedor.setText("Adicionar");
        btnAddFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFornecedorActionPerformed(evt);
            }
        });

        btnRomoverFornecedor.setBackground(new java.awt.Color(255, 0, 0));
        btnRomoverFornecedor.setText("Remover");
        btnRomoverFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRomoverFornecedorActionPerformed(evt);
            }
        });

        lblFornecedor.setText("Encarregado:");

        cbxFornecedor.setModel(this.modelFornecedorCombo);
        cbxFornecedor.setSelectedItem(this.modelFornecedorCombo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblMarca)
                            .addComponent(lblFornecedor)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblNome)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblPrecoVenda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblQuantidade)
                            .addComponent(lblCategoria))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(btnAddFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRomoverFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancelar)
                .addGap(20, 20, 20)
                .addComponent(btnOk)
                .addGap(71, 71, 71))
            .addComponent(jScrollPane1)
            .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNome)
                    .addComponent(lblQuantidade)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMarca)
                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCategoria)
                    .addComponent(cbxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrecoVenda)
                    .addComponent(txtPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFornecedor)
                    .addComponent(cbxFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnOk)
                    .addComponent(btnAddFornecedor)
                    .addComponent(btnRomoverFornecedor))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        if (txtNome.getText().isEmpty() || txtMarca.getText().isEmpty() || 
            txtPrecoVenda.getText().isEmpty() ||
            txtQuantidade.getText().isEmpty() ) {
            this.showErrorMessage("Campo vazio!");        
        }
        else{
            retornoOk = true;
            this.dispose();
        }
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        retornoOk = false;
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void cbxCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCategoriaActionPerformed
        
    }//GEN-LAST:event_cbxCategoriaActionPerformed

    private void btnAddFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFornecedorActionPerformed
        fornecedorModel.add((Encarregado) cbxFornecedor.getSelectedItem());
    }//GEN-LAST:event_btnAddFornecedorActionPerformed

    private void btnRomoverFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRomoverFornecedorActionPerformed
        // TODO add your handling code here:
        try {
            int linha = mmFornGrid.getSelectedRow();
            Encarregado aRemover = fornecedorModel.getObjetoLinha(linha);
            fornecedorModel.remove(aRemover);
        } catch (Exception e) {
        }

    }//GEN-LAST:event_btnRomoverFornecedorActionPerformed




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFornecedor;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnRomoverFornecedor;
    private javax.swing.JComboBox<Model.Tipo> cbxCategoria;
    private javax.swing.JComboBox<Model.Encarregado> cbxFornecedor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JLabel lblCategoria;
    private javax.swing.JLabel lblFornecedor;
    private javax.swing.JLabel lblMarca;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblPrecoVenda;
    private javax.swing.JLabel lblQuantidade;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable mmFornGrid;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtNome;
    private javax.swing.JFormattedTextField txtPrecoVenda;
    private javax.swing.JTextField txtQuantidade;
    // End of variables declaration//GEN-END:variables


    
   
            
    
    
    @Override
    public Carga criar() {
        
        this.limpaTela();
        this.prepararCriar();
        Carga produto = null;
        cbxCategoria.setModel(new DefaultComboBoxModel(listaCategorias.toArray()));
        cbxFornecedor.setModel(new DefaultComboBoxModel(listaFornecedores.toArray()));
        
        
        this.setVisible(true);
        if (retornoOk) {
            produto = this.getScreenObject();
        }
        return produto;
    }    

    
    public Carga getScreenObject(){

        Carga novo = new Carga();
        novo.setNome(txtNome.getText());
        novo.setMarca(txtMarca.getText());
        novo.setPrecoCarga(Double.parseDouble(txtPrecoVenda.getText()));
        novo.setQuantidade(Integer.parseInt(txtQuantidade.getText()));
        novo.setTipo((Tipo) cbxCategoria.getSelectedItem());
        novo.setFornecedor(fornecedorModel.getLista());
        for (Encarregado fornecedor : fornecedorModel.getLista()) {
            fornecedor.getEncarregados().add(novo);
        }
        return novo;
    }
    
    
    
    public Carga limpaTela(){
        
        txtNome.setText("");
        txtMarca.setText("");
        txtPrecoVenda.setText("");
        txtQuantidade.setText("");
        
        return null;
    }
    public void preencherTela (Carga preencha){
        txtNome.setText(preencha.getNome());
        txtMarca.setText(preencha.getMarca());
        txtPrecoVenda.setText(String.valueOf(preencha.getPrecoCarga()));
        txtQuantidade.setText(String.valueOf(preencha.getQuantidadeAtual())); 
        
    }

    @Override
    public void mostrar(Carga type) {
        this.prepararMostra(type);
        this.setVisible(true);
    }

    @Override
    public Carga editar(Carga produto) {
        
        this.prepararEditar(produto);

//        fornecedorModel.setLista(produto.getFornecedor());


        this.setVisible(true);
        if (retornoOk) {
            produto.setNome(txtNome.getText());
            produto.setMarca(txtMarca.getText());
            produto.setPrecoCarga(Double.parseDouble(txtPrecoVenda.getText()));
            produto.setQuantidade(Integer.parseInt(txtQuantidade.getText()));
            produto.setTipo((Tipo) cbxCategoria.getSelectedItem());
        }
        return produto;
        
        
        //this.limpaTela();
//        this.setVisible(true);
//        if (retornoOk) {
//            produto.setNome(txtNome.getText());
//            produto.setMarca(txtMarca.getText());
//            produto.setPrecoVenda(Double.parseDouble(txtPrecoVenda.getText()));
//            produto.setQuantidade(Integer.parseInt(txtQuantidade.getText()));
//        }
//        else if(retornoOk == false){
//            showMessage("CANCELADO PELO USUÁRIO!");
//        }
//        else if (produto == null) {
//            showMessage("NÃO ENCONTRADO!");
//        }
//        else{
//            showMessage("ALTERADO COM SUCESSO!");
//        }
//            return produto;
    }

    @Override
    public boolean excluir(Carga deletar) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void listar(List<Carga> listas) {
        String lista = "";
        for (Carga produto : listas) {
            if (produto != null) {
                lista += produto.toString() + "\n";
            }
        }
        showMessage(lista);
    }

    @Override
    public void read(Carga Type) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    
    public void prepararCriar(){
        lblTitulo.setText("Cadastro de Produto");
        
        txtNome.setText("");
        txtNome.setEditable(true);
        txtNome.setEnabled(true);
        
        txtMarca.setText("");
        txtMarca.setEditable(true);
        txtMarca.setEnabled(true);        
        
        txtPrecoVenda.setText("");
        txtPrecoVenda.setEditable(true);
        txtPrecoVenda.setEnabled(true);
        
        txtQuantidade.setText("");
        txtQuantidade.setEditable(true);
        txtQuantidade.setEnabled(true);        
           
        
        btnOk.setText("Salvar");
        btnOk.setVisible(true);
        
        btnCancelar.setText("Cancelar");
        btnCancelar.setVisible(true);
       
        
        btnAddFornecedor.setVisible(true);
        btnRomoverFornecedor.setVisible(true);
        
    }
    
    
    public void prepararEditar(Carga produto){

        lblTitulo.setText("Alterar Produto");
        
        txtNome.setText(produto.getNome());
        txtNome.setEditable(true);
        txtNome.setEnabled(true);
        
        txtMarca.setText(produto.getMarca());
        txtMarca.setEditable(true);
        txtMarca.setEnabled(true);        
        
        txtPrecoVenda.setText(String.valueOf(produto.getPrecoCarga()));
        txtPrecoVenda.setEditable(true);
        txtPrecoVenda.setEnabled(true);
        
        txtQuantidade.setText(String.valueOf(produto.getQuantidadeAtual())); 
        txtQuantidade.setEditable(true);
        txtQuantidade.setEnabled(true);        
           
        
        btnOk.setText("Alterar");
        btnOk.setVisible(true);
        
        btnCancelar.setText("Cancelar");
        btnCancelar.setVisible(true);
        
        btnAddFornecedor.setVisible(true);
        btnRomoverFornecedor.setVisible(true);
                
    }
    
    
    public void prepararMostra(Carga mostrar ){
        lblTitulo.setText("Dados Produto");
        
        txtNome.setText(mostrar.getNome());
        txtNome.setEditable(false);
        txtNome.setEnabled(false);
        
        txtMarca.setText(mostrar.getMarca());
        txtMarca.setEditable(false);
        txtMarca.setEnabled(false);        
        
        txtPrecoVenda.setText(String.valueOf(mostrar.getPrecoCarga()));
        txtPrecoVenda.setEditable(false);
        txtPrecoVenda.setEnabled(false);
        
        txtQuantidade.setText(String.valueOf(mostrar.getQuantidadeAtual())); 
        txtQuantidade.setEditable(false);
        txtQuantidade.setEnabled(false);        
             
        
        btnOk.setText("Ok");
        btnOk.setVisible(true);
        
        btnCancelar.setText("Cancelar");
        btnCancelar.setVisible(false);
        

        
        btnAddFornecedor.setVisible(false);
        btnRomoverFornecedor.setVisible(false);
        
    }
    
    
}
